services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: mspr501_api_flask
    restart: unless-stopped
    ports:
      - "5000:5000"

  etl:
    build:
      context: ./etl
      dockerfile: Dockerfile
    container_name: mspr501_etl_service
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./etl:/app
    environment:
      - SPARK_HOME=/opt/spark-3.4.4-bin-hadoop3
      - PATH=$SPARK_HOME/bin:$PATH

  metabase:
    image: metabase/metabase:v0.52.x
    container_name: mspr501_metabase
    restart: unless-stopped
    ports:
      - '3003:3000'
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=bdmetabase
      - MB_DB_PORT=5432
      - MB_DB_USER=bdmetabase
      - MB_DB_PASS=s5t4v5
      - MB_DB_HOST=pg_db_metabase
      - JAVA_TIMEZONE=Europe/Paris
    depends_on:
      - pg_db_metabase

  pgadmin4:
    build:
      context: ./pg_admin
      dockerfile: Dockerfile
    container_name: mspr501_pg_admin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: s5t4v5
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy

  pg_db_metabase:
    build:
      context: ./pg_db_metabase
      dockerfile: Dockerfile
    container_name: mspr501_pg_db_metabase
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: bdmetabase
      POSTGRES_USER: bdmetabase
      POSTGRES_PASSWORD: s5t4v5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bdmetabase"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgmetabase-data:/var/lib/postgresql/data

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: mspr501_postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: mspr501
      POSTGRES_USER: mspr501
      POSTGRES_PASSWORD: s5t4v5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mspr501"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg-data:/var/lib/postgresql/data

volumes:
  pg-data:
  pgmetabase-data: