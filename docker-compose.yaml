services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: mspr501_api_flask
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./api/src:/app

  # etl:
  #   build:
  #     context: ./etl
  #     dockerfile: Dockerfile
  #   container_name: mspr501_etl_service
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./etl:/app
  #   environment:
  #     - SPARK_HOME=/opt/spark-3.4.4-bin-hadoop3
  #     - PATH=$SPARK_HOME/bin:$PATH

  etl_dev:
    build:
      context: ./dev/app
      dockerfile: Dockerfile
    container_name: mspr501_etl_dev
    restart: unless-stopped
    depends_on:
      - postgres
    volumes:
      - ./dev/app/src:/app
    environment:
      - SPARK_HOME=/opt/spark-3.4.4-bin-hadoop3
      - PATH=$SPARK_HOME/bin:$PATH
      - PYTHONPATH=/app

  metabase:
    image: metabase/metabase:v0.52.x
    container_name: mspr501_metabase
    restart: unless-stopped
    ports:
      - '3003:3000'
    volumes:
    - ./metabase-data:/metabase-data
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db

  pgadmin4:
    build:
      context: ./pg_admin
      dockerfile: Dockerfile
    container_name: mspr501_pg_admin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: s5t4v5
    ports:
      - "7080:80"
    depends_on:
      postgres:
        condition: service_healthy


  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: mspr501_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mspr501
      POSTGRES_USER: mspr501
      POSTGRES_PASSWORD: s5t4v5
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mspr501"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg-data:/var/lib/postgresql/data

volumes:
  pg-data: